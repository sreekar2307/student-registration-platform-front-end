{"version":3,"sources":["reportWebVitals.js","config/app.js","config/axios.js","student/list.js","student/show.js","student/create.js","navigation/navigation.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","constants","api","axios","create","baseURL","timeout","headCells","id","numeric","disablePadding","label","EnhancedTableHead","props","classes","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","StyledTableCell","align","padding","sortDirection","TableSortLabel","active","direction","onClick","property","event","className","visuallyHidden","useStyles","makeStyles","theme","root","width","paper","marginBottom","spacing","table","minWidth","border","clip","height","margin","overflow","position","top","mousePointer","cursor","withStyles","head","backgroundColor","palette","grey","color","common","black","fontWeight","body","fontSize","TableCell","StudentList","React","useState","setOrder","setOrderBy","page","setPage","rows","setRows","pagination","setPagination","errors","setErrors","useEffect","payload","query","page_number","sort","get","qs","stringify","data","students","meta","catch","err","response","isLastPage","isOutOfRange","Chip","JSON","Paper","TableContainer","Table","aria-labelledby","size","aria-label","rowCount","length","TableBody","row","labelId","hover","history","push","tabIndex","component","scope","email","name","TablePagination","count","nextIconButtonProps","disabled","rowsPerPageOptions","labelDisplayedRows","from","to","rowsPerPage","onChangePage","newPage","styles","display","flexWrap","textField","marginLeft","marginRight","formControl","chips","chip","noLabel","marginTop","button","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","StudentShow","onDelete","setState","state","deleting","delete","student","saving","onSave","put","enrollmentNo","degree","courses","course","resp","console","log","onCreateNew","degrees","studentId","this","match","params","Grid","container","justify","alignItems","Button","variant","goBack","bind","TextField","fullWidth","value","InputLabelProps","shrink","placeholder","helperText","onChange","getHandleChange","call","required","FormControl","InputLabel","Select","handleDegreeChange","MenuItem","index","multiple","input","Input","handleCourseChange","renderValue","selected","startIcon","CircularProgress","Component","field","target","find","newCourse","filter","StudentCreate","post","Navigation","path","exact","withRouter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a901a0bd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const constants = {\n    'baseURL': \"http://localhost:8080/api/v1/\"\n}\nif (process.env.NODE_ENV === 'production') {\n    constants['baseURL'] = 'http://ec2-15-206-82-30.ap-south-1.compute.amazonaws.com/api/v1/'\n}\n\nexport default constants","import axios from \"axios\";\nimport constants from \"./app\";\n\nconst api = axios.create({\n    baseURL: constants[\"baseURL\"],\n    timeout: 1000,\n});\n\nexport default api\n\n","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Paper from '@material-ui/core/Paper';\nimport api from \"../config/axios\";\nimport qs from \"qs\";\nimport {Chip, withStyles} from \"@material-ui/core\";\n\n\nconst headCells = [\n    {id: 'id', numeric: true, disablePadding: true, label: 'Id'},\n    {id: 'email', numeric: false, disablePadding: false, label: 'Email Address'},\n    {id: 'name', numeric: false, disablePadding: false, label: 'Student Name'},\n    {id: 'enrollmentNo', numeric: false, disablePadding: false, label: 'Enrollment Number'},\n];\n\nfunction EnhancedTableHead(props) {\n    const {classes, order, orderBy, onRequestSort} = props;\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {headCells.map((headCell) => (\n                    <StyledTableCell\n                        key={headCell.id}\n                        align='right'\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : 'asc'}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </StyledTableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n    mousePointer: {\n        cursor: 'pointer'\n    }\n}));\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.grey['500'],\n        color: theme.palette.common.black,\n        fontWeight: 'bold'\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport default function StudentList(props) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('id');\n    const [page, setPage] = React.useState(0);\n    const [rows, setRows] = React.useState([]);\n    const [pagination, setPagination] = React.useState([]);\n    const [errors, setErrors] = React.useState(null);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n        setPage(0);\n    };\n\n    useEffect(() => {\n        const payload = {query: {page_number: page + 1, sort: `${orderBy}::${order}`}}\n        api.get(`students?${qs.stringify(payload)}`).then(({data}) => {\n            const {students, meta} = data;\n            setRows(students);\n            setPagination(meta.pagination);\n            setErrors(null);\n        }).catch(err => {\n            setErrors(err.response.data)\n        })\n    }, [page, orderBy, order])\n\n    const handleClick = (event, id) => {\n        props.history.push(`/students/${id}`);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const isLastPage = pagination.isOutOfRange || pagination.isLastPage\n    if (errors) {\n        return <Chip color=\"secondary\" label={JSON.stringify(errors)}/>\n    }\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {rows.map((row) => {\n                                const labelId = `enhanced-table-row-${row.id}`;\n\n                                return (\n                                    <TableRow\n                                        className={classes.mousePointer}\n                                        hover\n                                        onClick={(event) => handleClick(event, row.id)}\n                                        tabIndex={-1}\n                                        key={row.name}\n                                    >\n                                        <TableCell component=\"th\" id={labelId} scope=\"row\" align=\"right\" padding=\"none\">\n                                            {row.id}\n                                        </TableCell>\n                                        <TableCell align=\"right\">{row.email}</TableCell>\n                                        <TableCell align=\"right\">{row.name}</TableCell>\n                                        <TableCell align=\"right\">{row[\"enrollment_no\"]}</TableCell>\n                                    </TableRow>\n                                );\n                            })}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    component=\"div\"\n                    count={-1}\n                    nextIconButtonProps={{disabled: isLastPage}}\n                    rowsPerPageOptions={[15]}\n                    labelDisplayedRows={({from, to, count}) => {\n                        return isLastPage ? `${from}-${to}` : `${from}-${to} of ${count !== -1 ? count : `more than ${to}`}`\n                    }}\n                    rowsPerPage={15}\n                    page={page}\n                    onChangePage={handleChangePage}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React from 'react';\nimport api from \"../config/axios\";\nimport {\n    Chip,\n    CircularProgress,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    withStyles\n} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport const styles = (theme) => ({\n    root: {\n        display: 'flex',\n        padding: '1em',\n        flexWrap: 'wrap',\n        width: '75%'\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: '25ch',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        width: \"100%\"\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: 2,\n    },\n    noLabel: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n})\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nexport const MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n            width: 250,\n        },\n    },\n};\n\nclass StudentShow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            student: null,\n            courses: [],\n            degrees: [],\n            deleting: false,\n            saving: false,\n            errors: null\n        }\n    }\n\n    componentDidMount() {\n        const studentId = this.props.match.params['studentId']\n        api.get(`students/${studentId}`).then(({data}) => {\n            const {student} = data\n            this.setState({\n                ...this.state,\n                errors: null,\n                student: {\n                    id: student.id,\n                    name: student.name,\n                    email: student.email,\n                    enrollmentNo: student['enrollment_no'],\n                    courses: student.courses,\n                    degree: student.degree,\n                }\n            });\n            api(`degrees/${student.degree.id}/courses`).then(({data}) => {\n                this.setState({\n                    ...this.state,\n                    errors: null,\n                    courses: data.courses,\n                })\n            }).catch(err => {\n                this.setState({\n                    ...this.state,\n                    errors: err.response.data\n                })\n            })\n        }).catch(err => {\n            this.setState({\n                ...this.state,\n                errors: err.response.data\n            })\n        })\n        api.get('degrees').then(({data}) => {\n            const {degrees} = data\n            this.setState({\n                ...this.state,\n                errors: null,\n                degrees\n            })\n        }).catch(err => {\n            this.setState({\n                ...this.state,\n                errors: err.response.data\n            })\n        })\n    }\n\n    onDelete = () => {\n        this.setState({\n            ...this.state,\n            deleting: true,\n            errors: null\n        })\n        api.delete(`students/${this.state.student.id}`).then(() => {\n            this.setState({\n                ...this.state,\n                saving: false,\n                errors: null\n            })\n            this.props.history.push(`/students`)\n        }).catch(err => {\n            this.setState({\n                ...this.state,\n                deleting: false,\n                errors: err.response.data\n            })\n        })\n    }\n\n    onSave = () => {\n        this.setState({\n            ...this.state,\n            saving: true,\n            errors: null\n        })\n        api.put(`students/${this.state.student.id}`, {\n            student: {\n                \"name\": this.state.student.name,\n                \"enrollment_no\": this.state.student.enrollmentNo,\n                \"email\": this.state.student.email,\n                \"degree_id\": this.state.student.degree ? this.state.student.degree.id : -1,\n                \"course_ids\": this.state.student.courses.map(course => course.id)\n            }\n        }).then((resp) => {\n            console.log(resp)\n            this.setState({\n                ...this.state,\n                saving: false,\n                errors: null\n            })\n        }).catch(err => {\n            console.log(err)\n            this.setState({\n                ...this.state,\n                saving: false,\n                errors: err.response.data\n            })\n        })\n\n    }\n\n    onCreateNew = () => {\n        this.props.history.push(`/students/create`);\n    }\n\n\n    render() {\n        const {classes} = this.props\n        const {student, degrees, courses, deleting, saving, errors} = this.state;\n        const studentId = this.props.match.params['studentId']\n        if (!student) {\n            return <CircularProgress/>\n        }\n        return (\n            <div className={classes.root}>\n                <div>\n                    {errors ? <Chip color=\"secondary\" label={JSON.stringify(errors)}/> : <br/>}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            size=\"large\"\n                            onClick={goBack.bind(this)}\n                        >\n                            Go Back\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            size=\"large\"\n                            onClick={this.onCreateNew}\n                        >\n                            Create New\n                        </Button>\n                    </Grid>\n                    <TextField\n                        id={`${studentId}-Id`}\n                        label=\"Id\"\n                        style={{margin: 8}}\n                        fullWidth\n                        value={student.id}\n                        margin=\"normal\"\n                        disabled\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id={`${studentId}-name`}\n                        label=\"Name\"\n                        style={{margin: 8}}\n                        placeholder=\"name of the student\"\n                        helperText=\"Please enter the name of the student\"\n                        fullWidth\n                        onChange={getHandleChange.call(this, 'name')}\n                        value={student.name}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id={`${studentId}-email`}\n                        label=\"Email\"\n                        style={{margin: 8}}\n                        placeholder=\"Email address of the student\"\n                        helperText=\"Please enter the email address of the student\"\n                        fullWidth\n                        value={student.email}\n                        onChange={getHandleChange.call(this, 'email')}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id={`${studentId}-enrollmentNumber`}\n                        label=\"Enrollment Number\"\n                        style={{margin: 8}}\n                        placeholder=\"Enrollment Number of the student\"\n                        helperText=\"Please enter the Enrollment Number address of the student\"\n                        fullWidth\n                        value={student.enrollmentNo}\n                        onChange={getHandleChange.call(this, 'enrollmentNo')}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Degree</InputLabel>\n                        <Select\n                            fullWidth\n                            id={`${studentId}-degree`}\n                            value={student.degree ? student.degree.name : null}\n                            onChange={handleDegreeChange.bind(this)}\n                        >\n                            <MenuItem value={null}>\n                                <em>None</em>\n                            </MenuItem>\n                            {degrees.map((degree, index) => {\n                                return <MenuItem value={degree.name} key={degree.name}\n                                                 id={`student-${degree.id}-${index}`}>{degree.name}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Courses</InputLabel>\n                        <Select\n                            fullWidth\n                            id={`${studentId}-courses`}\n                            multiple\n                            value={student.courses.map(course => course.name)}\n                            input={<Input id=\"select-multiple-chip\"/>}\n                            placeholder=\"Courses Enrolled by the Student\"\n                            onChange={handleCourseChange.bind(this)}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                    {selected.map((value) => (\n                                        <Chip key={value} label={value} className={classes.chip}/>\n                                    ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                        >\n                            {courses.map((course) => (\n                                <MenuItem key={`student-courses-${course.name}`} value={course.name}>\n                                    {course.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            className={classes.button}\n                            onClick={this.onDelete}\n                            disabled={deleting}\n                            startIcon={<DeleteIcon/>}\n                        >\n                            Delete\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={this.onSave}\n                            disabled={saving}\n                            startIcon={<SaveIcon/>}\n                        >\n                            Save\n                        </Button>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport function getHandleChange(field) {\n    return event => this.setState({\n        ...this.state,\n        student: {\n            ...this.state.student,\n            [field]: event.target.value\n        }\n    })\n}\n\nexport function handleDegreeChange(event) {\n    if (event.target.value) {\n        const degree = this.state.degrees.find(degree => event.target.value === degree.name)\n        this.setState({\n            ...this.state,\n            student: {\n                ...this.state.student,\n                degree: degree,\n                courses: []\n            }\n        })\n        api.get(`degrees/${degree.id}/courses`).then(({data}) => {\n            this.setState({\n                ...this.state,\n                courses: data.courses,\n            })\n        })\n    } else {\n        this.setState({\n            ...this.state,\n            courses: [],\n            student: {\n                ...this.state.student,\n                degree: null,\n                courses: []\n            }\n        })\n    }\n}\n\nexport function handleCourseChange(event) {\n    const courses = this.state.courses.map(course => {\n        if (event.target.value.find(newCourse => newCourse === course.name)) {\n            return course\n        }\n        return null;\n    }).filter(course => course !== null)\n    this.setState({\n        ...this.state,\n        student: {\n            ...this.state.student,\n            courses: courses\n        }\n    })\n}\n\nexport function goBack() {\n    this.props.history.goBack()\n}\n\nexport default withStyles(styles)(StudentShow)","import React from 'react';\nimport api from \"../config/axios\";\nimport {\n    Chip,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    withStyles\n} from \"@material-ui/core\";\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport {getHandleChange, goBack, handleCourseChange, handleDegreeChange, MenuProps, styles} from \"./show\";\n\nclass StudentCreate extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            student: {\n                name: '',\n                email: '',\n                degree: {name: ''},\n                courses: [],\n                enrollmentNo: ''\n            },\n            courses: [],\n            degrees: [],\n            deleting: false,\n            saving: false,\n            errors: null\n        }\n    }\n\n    componentDidMount() {\n        api.get('degrees').then(({data}) => {\n            const {degrees} = data\n            this.setState({\n                ...this.state,\n                degrees,\n                errors: null\n            })\n        }).catch(err => {\n            this.setState({\n                ...this.state,\n                errors: err.response.data\n            })\n        })\n    }\n\n    onSave = () => {\n        this.setState({\n            ...this.state,\n            saving: true,\n        })\n        api.post(`students/`, {\n            student: {\n                \"name\": this.state.student.name,\n                \"enrollment_no\": this.state.student.enrollmentNo,\n                \"email\": this.state.student.email,\n                \"degree_id\": this.state.student.degree ? this.state.student.degree.id : null,\n                \"course_ids\": this.state.student.courses.map(course => course.id)\n            }\n        }).then(({data}) => {\n            this.setState({\n                ...this.state,\n                errors: null,\n                saving: false,\n            })\n            this.props.history.push(`/students/${data.student.id}/`)\n        }).catch(err => {\n            this.setState({\n                ...this.state,\n                saving: false,\n                errors: err.response.data,\n            })\n        })\n\n    }\n\n    render() {\n        const {classes} = this.props\n        const {student, degrees, courses, saving, errors} = this.state;\n        return (\n            <div className={classes.root}>\n                <div>\n                    {errors ? <Chip color=\"secondary\" label={JSON.stringify(errors)}/> : <br/>}\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"flex-start\"\n                        alignItems=\"center\"\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            size=\"large\"\n                            onClick={goBack.bind(this)}\n                        >\n                            Go Back\n                        </Button>\n                    </Grid>\n                    <TextField\n                        id={`student-name`}\n                        label=\"Name\"\n                        style={{margin: 8}}\n                        placeholder=\"name of the student\"\n                        helperText=\"Please enter the name of the student\"\n                        fullWidth\n                        onChange={getHandleChange.call(this, 'name')}\n                        value={student.name}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id={`student-email`}\n                        label=\"Email\"\n                        style={{margin: 8}}\n                        placeholder=\"Email address of the student\"\n                        helperText=\"Please enter the email address of the student\"\n                        fullWidth\n                        value={student.email}\n                        onChange={getHandleChange.call(this, 'email')}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <TextField\n                        id={`student-enrollmentNumber`}\n                        label=\"Enrollment Number\"\n                        style={{margin: 8}}\n                        placeholder=\"Enrollment Number of the student\"\n                        helperText=\"Please enter the Enrollment Number address of the student\"\n                        fullWidth\n                        value={student.enrollmentNo}\n                        onChange={getHandleChange.call(this, 'enrollmentNo')}\n                        margin=\"normal\"\n                        required\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                    />\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Degree</InputLabel>\n                        <Select\n                            fullWidth\n                            id={`student-degree`}\n                            value={student.degree ? student.degree.name : null}\n                            onChange={handleDegreeChange.bind(this)}\n                        >\n                            <MenuItem value={null}>\n                                <em>None</em>\n                            </MenuItem>\n                            {degrees.map((degree, index) => {\n                                return <MenuItem value={degree.name} key={degree.name}\n                                                 id={`student-${degree.id}-${index}`}>{degree.name}</MenuItem>\n                            })}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Courses</InputLabel>\n                        <Select\n                            fullWidth\n                            id={`student-courses`}\n                            multiple\n                            value={student.courses.map(course => course.name)}\n                            input={<Input id=\"select-multiple-chip\"/>}\n                            placeholder=\"Courses Enrolled by the Student\"\n                            onChange={handleCourseChange.bind(this)}\n                            renderValue={(selected) => (\n                                <div className={classes.chips}>\n                                    {selected.map((value) => (\n                                        <Chip key={value} label={value} className={classes.chip}/>\n                                    ))}\n                                </div>\n                            )}\n                            MenuProps={MenuProps}\n                        >\n                            {courses.map((course) => (\n                                <MenuItem key={`student-courses-${course.name}`} value={course.name}>\n                                    {course.name}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Grid\n                        container\n                        direction=\"row\"\n                        justify=\"space-between\"\n                        alignItems=\"center\"\n                    >\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.button}\n                            onClick={this.onSave}\n                            disabled={saving}\n                            startIcon={<SaveIcon/>}\n                        >\n                            Create\n                        </Button>\n                    </Grid>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(StudentCreate)","import React from \"react\";\nimport {Route, withRouter, Switch} from \"react-router-dom\";\nimport StudentList from \"../student/list\";\nimport StudentShow from \"../student/show\";\nimport StudentCreate from \"../student/create\";\n\nclass Navigation extends React.Component {\n    render() {\n        return (\n            <div>\n                <Switch>\n                    <Route path=\"/students/create\" exact component={StudentCreate}/>\n                    <Route path=\"/students/:studentId\" exact component={StudentShow}/>\n                    <Route path=\"/students\" exact component={StudentList}/>\n                    <Route path=\"/\" exact component={StudentList}/>\n                </Switch>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Navigation);","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Route\n} from \"react-router-dom\";\nimport './App.css';\nimport Navigation from \"./navigation/navigation\";\n\nfunction App() {\n    return (\n        <Router>\n            <Route component={Navigation}/>\n        </Router>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}